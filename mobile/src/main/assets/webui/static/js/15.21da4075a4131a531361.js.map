{"version":3,"sources":["webpack:///./src/util/time.js","webpack:///./src/queries.js","webpack:///./src/components/SummaryView.vue?19de","webpack:///src/components/SummaryView.vue","webpack:///./src/components/SummaryView.vue?770b","webpack:///./src/components/SummaryView.vue"],"names":["__webpack_require__","r","__webpack_exports__","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","seconds_to_duration","seconds","result","hrs","Math","floor","min","sec","get_day_start","datestr","datestart","moment","set","get_prev_day","add","get_next_day","querystr_to_array","querystr","split","filter","l","map","appnames","chrome","firefox","opera","brave","summaryQuery","windowbucket","afkbucket","count","replace","concat","windowQuery","appcount","titlecount","filterAFK","browserSummaryQuery","browserbuckets","limit","lodash_map__WEBPACK_IMPORTED_MODULE_2___default","b","code","lodash_each__WEBPACK_IMPORTED_MODULE_1___default","browserName","bucketId","lodash_filter__WEBPACK_IMPORTED_MODULE_0___default","buckets","indexOf","undefined","appnames_str","JSON","stringify","appQuery","appbucket","dailyActivityQuery","dailyActivityQueryAndroid","androidbucket","editorActivityQuery","editorbucket","_query2","components_SummaryViewvue_type_script_lang_js_","name","props","data","_ref","errormsg","top_apps","defineProperty_default","e","app","title","computed","readableDuration","time","this","duration","host","$route","params","windowBucketId","afkBucketId","watch","period","query","mounted","methods","errorHandler","error","asyncToGenerator_default","regenerator_default","a","mark","_callee","periods","q","wrap","_context","prev","next","queries","$aw","sent","console","log","top_windowtitles","stop","apply","arguments","component","Object","componentNormalizer","_vm","_h","$createElement","_c","_self","attrs","variant","show","length","_v","_s","staticClass","fields","namefunc","top_apps_namefunc","colorfunc","top_apps_colorfunc","top_windowtitles_namefunc","top_windowtitles_colorfunc"],"mappings":"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","file":"static/js/15.21da4075a4131a531361.js","sourcesContent":["import moment from 'moment';\n\nexport default {\n    seconds_to_duration(seconds) {\n        var result = \"\";\n        var hrs = Math.floor(seconds/60/60);\n        var min = Math.floor(seconds/60%60);\n        var sec = Math.floor(seconds%60);\n        if (hrs != 0)\n            result += hrs + \"h\";\n        if (hrs != 0 || min != 0)\n            result += min + \"m\";\n        if (hrs == 0)\n            result += sec + \"s\";\n        return result;\n    },\n\n    get_day_start(datestr) {\n      // Get start time of date\n      var datestart = moment(datestr);\n      datestart.set('hour', 0);\n      datestart.set('minute', 0);\n      datestart.set('second', 0);\n      datestart.set('millisecond', 0);\n      return datestart;\n    },\n\n    get_prev_day(datestr){\n      var newdate = moment(datestr).add(-1, 'days');\n      return newdate;\n    },\n\n    get_next_day(datestr){\n      var newdate = moment(datestr).add(1, 'days');\n      return newdate;\n    },\n}\n","import _ from \"lodash\";\n\n// TODO: Sanitize string input of buckets\n\nfunction querystr_to_array(querystr) {\n  return querystr\n    .split(\";\")\n    .filter(l => l)\n    .map(l => l + \";\");\n}\n\nexport function summaryQuery(windowbucket, afkbucket, count) {\n  windowbucket = windowbucket.replace('\"', '\\\\\"');\n  afkbucket = afkbucket.replace('\"', '\\\\\"');\n  let code = `events  = flood(query_bucket(\"${windowbucket}\"));\n    not_afk = flood(query_bucket(\"${afkbucket}\"));\n    not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);\n    events  = filter_period_intersect(events, not_afk);\n    title_events  = merge_events_by_keys(events, [\"app\", \"title\"]);\n    title_events  = sort_by_duration(title_events);\n    app_events  = merge_events_by_keys(title_events, [\"app\"]);\n    app_events  = sort_by_duration(app_events);\n    app_events  = limit_events(app_events, ${count});\n    title_events  = limit_events(title_events, ${count});\n    RETURN  = {\"app_events\": app_events, \"title_events\": title_events};`;\n  return querystr_to_array(code);\n}\n\nexport function windowQuery(\n  windowbucket,\n  afkbucket,\n  appcount,\n  titlecount,\n  filterAFK\n) {\n  windowbucket = windowbucket.replace('\"', '\\\\\"');\n  afkbucket = afkbucket.replace('\"', '\\\\\"');\n  let code =\n    `events  = flood(query_bucket(\"${windowbucket}\"));\n     not_afk = flood(query_bucket(\"${afkbucket}\"));\n     not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);` +\n    (filterAFK ? \"events  = filter_period_intersect(events, not_afk);\" : \"\") +\n    `title_events  = merge_events_by_keys(events, [\"app\", \"title\"]);\n    title_events  = sort_by_duration(title_events);\n    app_events  = merge_events_by_keys(title_events, [\"app\"]);\n    app_events  = sort_by_duration(app_events);\n\n    events = sort_by_timestamp(events);\n    app_chunks = chunk_events_by_key(events, \"app\");\n    app_events  = limit_events(app_events, ${appcount});\n    title_events  = limit_events(title_events, ${titlecount});\n    duration = sum_durations(events);\n    RETURN  = {\"app_events\": app_events, \"title_events\": title_events, \"app_chunks\": app_chunks, \"duration\": duration};`;\n  return querystr_to_array(code);\n}\n\nexport function appQuery(appbucket, limit) {\n  appbucket = appbucket.replace('\"', '\\\\\"');\n  limit = limit || 5;\n  let code =\n    `events  = query_bucket(\"${appbucket}\");` +\n    `events  = merge_events_by_keys(events, [\"app\"]);\n    events  = sort_by_duration(events);\n    events  = limit_events(events, ${limit});\n    total_duration = sum_durations(events);\n    RETURN  = {\"events\": events, \"total_duration\": total_duration};`;\n  return querystr_to_array(code);\n}\n\nconst appnames = {\n  chrome: [\n    \"Google-chrome\",\n    \"chrome.exe\",\n    \"Chromium\",\n    \"Google Chrome\",\n    \"Chromium-browser\",\n    \"Chromium-browser-chromium\",\n    \"Google-chrome-beta\",\n    \"Google-chrome-unstable\"\n  ],\n  firefox: [\n    \"Firefox\",\n    \"Firefox.exe\",\n    \"firefox\",\n    \"firefox.exe\",\n    \"Firefox Developer Edition\",\n    \"Firefox Beta\",\n    \"Nightly\"\n  ],\n  opera: [\"opera.exe\", \"Opera\"],\n  brave: [\"brave.exe\"]\n};\n\nexport function browserSummaryQuery(\n  browserbuckets,\n  windowbucket,\n  afkbucket,\n  limit,\n  filterAFK\n) {\n  // Escape `\"`\n  browserbuckets = _.map(browserbuckets, b => b.replace('\"', '\\\\\"'));\n  windowbucket = windowbucket.replace('\"', '\\\\\"');\n  afkbucket = afkbucket.replace('\"', '\\\\\"');\n  limit = limit || 5;\n\n  // If multiple browser buckets were found\n  let code =\n    `events = [];\n     window = flood(query_bucket(\"${windowbucket}\"));` +\n    (filterAFK\n      ? `not_afk = flood(query_bucket(\"${afkbucket}\"));\n     not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);`\n      : \"\");\n\n  _.each([\"chrome\", \"firefox\", \"opera\", \"brave\"], browserName => {\n    let bucketId = _.filter(\n      browserbuckets,\n      buckets => buckets.indexOf(browserName) !== -1\n    )[0];\n    if (bucketId === undefined) {\n      // Skip browser if specific bucket not available\n      return;\n    }\n    let appnames_str = JSON.stringify(appnames[browserName]);\n    code +=\n      `events_${browserName} = flood(query_bucket(\"${bucketId}\"));\n       window_${browserName} = filter_keyvals(window, \"app\", ${appnames_str});` +\n      (filterAFK\n        ? `window_${browserName} = filter_period_intersect(window_${browserName}, not_afk);`\n        : \"\") +\n      `events_${browserName} = filter_period_intersect(events_${browserName}, window_${browserName});\n       events_${browserName} = split_url_events(events_${browserName});\n       events = sort_by_timestamp(concat(events, events_${browserName}));`;\n  });\n\n  return querystr_to_array(code).concat([\n    'urls = merge_events_by_keys(events, [\"url\"]);',\n    \"urls = sort_by_duration(urls);\",\n    \"urls = limit_events(urls, \" + limit + \");\",\n    \"domains = split_url_events(events);\",\n    'domains = merge_events_by_keys(domains, [\"domain\"]);',\n    \"domains = sort_by_duration(domains);\",\n    \"domains = limit_events(domains, \" + limit + \");\",\n    'chunks = chunk_events_by_key(events, \"domain\");',\n    \"duration = sum_durations(events);\",\n    'RETURN = {\"domains\": domains, \"urls\": urls, \"chunks\": chunks, \"duration\": duration};'\n  ]);\n}\n\nexport function editorActivityQuery(editorbucket, limit) {\n  editorbucket = editorbucket.replace('\"', '\\\\\"');\n  return [\n    'editorbucket = \"' + editorbucket + '\";',\n    \"events = flood(query_bucket(editorbucket));\",\n    'files = sort_by_duration(merge_events_by_keys(events, [\"file\", \"language\"]));',\n    \"files = limit_events(files, \" + limit + \");\",\n    'languages = sort_by_duration(merge_events_by_keys(events, [\"language\"]));',\n    \"languages = limit_events(languages, \" + limit + \");\",\n    'projects = sort_by_duration(merge_events_by_keys(events, [\"project\"]));',\n    \"projects = limit_events(projects, \" + limit + \");\",\n    \"duration = sum_durations(events);\",\n    'RETURN = {\"files\": files, \"languages\": languages, \"projects\": projects, \"duration\": duration};'\n  ];\n}\n\nexport function dailyActivityQuery(afkbucket) {\n  afkbucket = afkbucket.replace('\"', '\\\\\"');\n  return [\n    'afkbucket = \"' + afkbucket + '\";',\n    \"not_afk = flood(query_bucket(afkbucket));\",\n    'not_afk = merge_events_by_keys(not_afk, [\"status\"]);',\n    \"RETURN = not_afk;\"\n  ];\n}\n\nexport function dailyActivityQueryAndroid(androidbucket) {\n  androidbucket = androidbucket.replace('\"', '\\\\\"');\n  return [\n    `events = query_bucket(\"${androidbucket}\");`,\n    \"RETURN = sum_durations(events);\"\n  ];\n}\n\nexport default {\n  summaryQuery,\n  windowQuery,\n  browserSummaryQuery,\n  appQuery,\n  dailyActivityQuery,\n  dailyActivityQueryAndroid,\n  editorActivityQuery\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-alert',{attrs:{\"variant\":\"danger\",\"show\":_vm.errormsg.length > 0}},[_vm._v(_vm._s(_vm.errormsg))]),_c('div',{staticClass:\"row\"},[_c('aw-summary',{staticClass:\"col-md-6\",attrs:{\"fields\":_vm.top_apps,\"namefunc\":_vm.top_apps_namefunc,\"colorfunc\":_vm.top_apps_colorfunc}}),_c('aw-summary',{staticClass:\"col-md-6\",attrs:{\"fields\":_vm.top_windowtitles,\"namefunc\":_vm.top_windowtitles_namefunc,\"colorfunc\":_vm.top_windowtitles_colorfunc}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n\ndiv\n  b-alert(variant=\"danger\" :show=\"errormsg.length > 0\")\n    | {{ errormsg }}\n  div.row\n    aw-summary.col-md-6(:fields=\"top_apps\", :namefunc=\"top_apps_namefunc\", :colorfunc=\"top_apps_colorfunc\")\n\n    aw-summary.col-md-6(:fields=\"top_windowtitles\", :namefunc=\"top_windowtitles_namefunc\", :colorfunc=\"top_windowtitles_colorfunc\")\n\n</template>\n\n<style scoped lang=\"scss\">\n</style>\n\n<script>\nimport moment from 'moment';\nimport time from \"../util/time.js\";\nimport query from '../queries.js';\n\nexport default {\n  name: \"SummaryView\",\n\n  props: [ \"period\" ],\n\n  data: () => {\n    return {\n      errormsg: \"\",\n      top_apps: [],\n      limit: 10,\n      top_apps: [],\n      top_apps_namefunc: (e) => e.data.app,\n      top_apps_colorfunc: (e) => e.data.app,\n      top_windowtitles: [],\n      top_windowtitles_namefunc: (e) => e.data.title,\n      top_windowtitles_colorfunc: (e) => e.data.app,\n    }\n  },\n\n  computed: {\n    readableDuration: function() { return time.seconds_to_duration(this.duration) },\n    host: function() { return this.$route.params.host },\n    windowBucketId: function() { return \"aw-watcher-window_\" + this.host },\n    afkBucketId:    function() { return \"aw-watcher-afk_\"    + this.host },\n  },\n\n  watch: {\n    'period': function() {\n      this.query();\n    },\n  },\n\n  mounted() {\n    this.query();\n  },\n\n  methods: {\n    errorHandler: function(error) {\n      this.errormsg = \"\" + error + \". See dev console (F12) and/or server logs for more info.\";\n      throw error;\n    },\n\n    query: async function() {\n      var periods = [this.period];\n      var q = query.summaryQuery(this.windowBucketId, this.afkBucketId, this.limit);\n      let data = await this.$aw.query(periods, q).catch(this.errorHandler);\n      console.log(data);\n      data = data[0];\n      console.log(data);\n      this.top_apps = data[\"app_events\"];\n      this.top_windowtitles = data[\"title_events\"];\n    },\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SummaryView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SummaryView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SummaryView.vue?vue&type=template&id=70c057a6&scoped=true&lang=pug&\"\nimport script from \"./SummaryView.vue?vue&type=script&lang=js&\"\nexport * from \"./SummaryView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"70c057a6\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}